% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_cv_group_fused_multi.R,
%   R/plot_group_fused_multi.R
\name{plot.cv.groupFusedMulti}
\alias{plot.cv.groupFusedMulti}
\alias{plot.groupFusedMulti}
\title{Plot method for cv.groupFusedMulti fitted objects}
\usage{
\method{plot}{cv.groupFusedMulti}(
  x,
  sign.lambda = 1,
  best.fused = FALSE,
  plot.method = c("lines", "heatmap", "min"),
  ...
)

\method{plot}{groupFusedMulti}(
  x,
  plot.type = c("all_variables", "all_outcomes"),
  lam.fused.idx = NULL,
  which.outcome = 1,
  which.variable = 1,
  which.outcome.group = 1,
  xvar = c("loglambda", "norm", "lambda", "dev"),
  xlab = iname,
  ylab = "Coefficients",
  main = NULL,
  labsize = 1,
  plot.only.nonzero = TRUE,
  vline.val = NULL,
  base.size = 12,
  ...
)
}
\arguments{
\item{x}{fitted \code{groupFusedMulti} or \code{cv.groupFusedMulti} model object}

\item{sign.lambda}{Either plot against log(lambda) (default) or its negative if \code{sign.lambda = -1}.}

\item{best.fused}{if \code{TRUE}, make a CV plot only for the best \code{lambda.fused} value. This includes
standard errors in the plot. If \code{FALSE}, plot CV for each value of \code{lambda.fused}. In this case,
no standard errors will be plotted.}

\item{plot.method}{either \code{'lines'} in which case a different line of the CV error versus the tuning parameter will be plotted
for each fused lasso tuning parameter, or \code{'heatmap'} in which case a 2 by 2 heatmap of the errors will be plotted
with each tuning parameter on one axis}

\item{...}{other graphical parameters for the plot}

\item{plot.type}{Either \code{"all_variables"}, where all the coefficients for all variables are plotted for a chosen 
outcome (given by \code{which.outcome}]) are plotted as a function of the tuning parameter, or \code{"all_outcomes"},
 where the coefficients for a given variable 
(chosen by \code{which.variable}) are plotted for all outcomes as a function of the tuning parameter}

\item{lam.fused.idx}{which lambda to use? specify integer between 1 and the number of tuning parameters used for fused lasso}

\item{which.outcome}{which outcome's coefficients should be plotted?}

\item{which.variable}{which outcome's coefficients should be plotted?}

\item{which.outcome.group}{if there are multiple outcome groupings, which of the groups should be used? Only used if multiple outcome groupings are present}

\item{xvar}{What is on the X-axis. "norm" plots against the L1-norm of the coefficients, "lambda" against the log-lambda sequence, and "dev"
against the percent deviance explained.}

\item{xlab}{character value supplied for x-axis label}

\item{ylab}{character value supplied for y-axis label}

\item{main}{text for plot title}

\item{labsize}{label size}

\item{plot.only.nonzero}{plot path only for values of the tuning parameter for which not all coefficients are zero?}

\item{vline.val}{value for the x-axis for which to include a vertical line. Defaults to no vertical line. Can be used to track tuning parameter
value that was chosen by cross-validation}

\item{base.size}{base font size for any plots constructed with \code{ggplot2} (i.e. only used when \code{plot.type='all_outcomes'}). Defaults
to 12}
}
\description{
Plot method for cv.groupFusedMulti fitted objects

Plotting method for groupFusedMulti fitted objects
}
\examples{

## examples for plot cv.groupFusedMulti

set.seed(123)

dat.sim <- gen_sparse_multivar_data(nvars = 5L,
                   noutcomes = 8L,
                   nobs = 500L,
                   nobs.test = 500L,
                   num.nonzero.vars = 5,
                   outcome.groups = rbind(c(1,1,1,2,2,2,2,2),
                                            c(1,1,1,2,2,3,3,3),
                                            c(1,1,2,3,3,4,4,5),
                                            c(1:8)))

x        <- dat.sim$x
x.test   <- dat.sim$x.test
y        <- dat.sim$y
y.test   <- dat.sim$y.test
beta     <- dat.sim$beta

outcome_groups <- rbind(c(1,1,1,2,2,2,2,2),
                        c(1,1,1,2,2,3,3,3),
                        c(1,1,2,3,3,4,4,5))
                        
fit.adapt <- cv.groupFusedMulti(x, y,
                                nlambda        = 25,
                                lambda.fused = c(0.00001, 0.0001, 0.001),
                                outcome.groups = outcome_groups,
                                gamma          = 0.25,
                                nfolds         = 3)
                                
plot(fit.adapt)

plot(fit.adapt, plot.method = "heatmap")


## examples for plot groupFusedMulti

set.seed(123)

dat.sim <- gen_sparse_multivar_data(nvars = 10L,
                   noutcomes = 8L,
                   nobs = 100L,
                   num.nonzero.vars = 5,
                   outcome.groups = rbind(c(1,1,1,2,2,2,2,2),
                                          c(1,1,1,2,2,3,3,3)))

x        <- dat.sim$x
y        <- dat.sim$y
beta     <- dat.sim$beta

outcome_groups <- rbind(c(1,1,1,2,2,2,2,2),
                        c(1,1,1,2,2,3,3,3))
                        
fit.adapt <- groupFusedMulti(x, y,
                             nlambda        = 25,
                             lambda.fused = c(0.00001, 0.0001, 0.001),
                             outcome.groups = outcome_groups,
                             adaptive.lasso = TRUE, adaptive.fused = TRUE,
                             gamma          = 0.5)

## plot all variables for first outcome (2nd fused lasso parameter)
plot(fit.adapt, lam.fused.idx = 2, which.outcome = 1)

## plot all variables for 8th outcome
plot(fit.adapt, lam.fused.idx = 2, which.outcome = 8,
     plot.type = "all_variables")

## plot effects of first variable on all outcomes
plot(fit.adapt, lam.fused.idx = 2, which.variable = 1,
     plot.type = "all_outcomes")

}
