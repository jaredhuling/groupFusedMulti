% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_sparse_data.R
\name{gen_sparse_multivar_data}
\alias{gen_sparse_multivar_data}
\title{function to generate data with hierarchical sparsity}
\usage{
gen_sparse_multivar_data(
  nvars = 10L,
  noutcomes = 8L,
  nobs = 100L,
  nobs.test = 100L,
  outcome.groups = rbind(c(1, 1, 1, 2, 2, 2, 2, 2), c(1, 1, 1, 2, 2, 3, 3, 3)),
  hier.sparsity.prob = 0.1,
  individ.sparsity.prob = 0.25,
  group.fused.prob = 0.5,
  num.nonzero.vars = min(nvars, 25L),
  family = c("gaussian", "binomial"),
  sd = 1,
  beta = NULL,
  x.rho = 0.5,
  y.rho = 0.5
)
}
\arguments{
\item{nvars}{number of variables}

\item{noutcomes}{number of outcomes}

\item{nobs}{number of observations per outcomes to simulate}

\item{nobs.test}{number of independent test observations per outcomes to simulate}

\item{outcome.groups}{groups for outcomes -- either a vector of length \code{noutcomes} of indices of what groups each outcome belongs to
or a matrix with \code{noutcomes} columns, with each row as a different grouping of the outcomes -- this allows for potentially overlapping
groups of the outcomes}

\item{hier.sparsity.prob}{probability that a group has its coefficients set to zero for any variable}

\item{individ.sparsity.prob}{probability that a specific coefficient is set to zero}

\item{group.fused.prob}{probability that all coefficients in a group are set to be equal to each other}

\item{num.nonzero.vars}{number variables that will NOT have zero effect across all outcomes}

\item{family}{family for the response variable}

\item{sd}{standard devation for gaussian simulations}

\item{beta}{a matrix of true beta values. If given, then no beta will be created and data will be simulated from the given beta}

\item{x.rho}{scalar, AR(1) correlation parameter for covariate distribution}

\item{y.rho}{scalar, AR(1) correlation parameter for outcomes}

\item{effect.size.max}{maximum magnitude of the true effect sizes}
}
\description{
function to generate data with hierarchical sparsity
}
\examples{
set.seed(123)

dat.sim <- gen_sparse_multivar_data(nvars = 15L,
                   noutcomes = 8L,
                   nobs = 100L,
                   nobs.test = 100L,
                   prop.zero.vars = 0.25,
                   outcome.groups = rbind(c(1,1,1,2,2,2,2,2),
                                          c(1,1,1,2,2,3,3,3),
                                          c(1:8)))

x        <- dat.sim$x
x.test   <- dat.sim$x.test
y        <- dat.sim$y
y.test   <- dat.sim$y.test
beta     <- dat.sim$beta

\dontrun{

outcome_groups <- rbind(c(1,1,1,2,2,2,2,2),
                        c(1,1,1,2,2,3,3,3))
                        
fit.adapt <- cv.groupFusedMulti(x, y,
                                nlambda        = 50,
                                lambda.fused = c(0.000005, 0.00001, 0.000025, 0.00005, 0.0001),
                                outcome.groups = outcome_groups,
                                gamma          = 0.25,
                                nfolds         = 5)

est.coefs <- predict(fit.adapt, type = "coef")
colnames(beta) <- colnames(est.coefs)

round(est.coefs, 3)
beta

preds.a <- predict(fit.adapt, x.test, type = 'response')

## rmse for each outcome
sqrt(colMeans((y.test - preds.a) ^ 2))

## avg rmse
mean(sqrt(colMeans((y.test - preds.a) ^ 2)))
                   
}


}
